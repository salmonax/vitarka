head
  script.
    const screenWords = [1,2];
  style.
    .slider {
      -webkit-appearance: none;
      width: 90%;
      margin-left: 5%;
      height: 12px;
      border: 1px solid #fff9;
      border-radius: 1px;
      background: #ddd8;
      outline: none;
      opacity: 0.7;
      -webkit-transition: .2s;
      transition: opacity .2s;
    }
    
    .slider:hover {
      opacity: 1;
    }
    input.done::placeholder {
      color: lightgrey;
    }
    input.done {
      font-size: 7px;
      width: calc(100% + 20px);
      margin: 0px -10px;
      margin-bottom: -11px;
      padding: 10 4px;
      border-style: solid;
      border-radius: 1px;
      border: 1px solid #fff9;
      border-left: 0px;
      border-right: 0px;
      border-bottom: 0px;
      background: #ddd8;
      outline: none;
    }
    input.done:focus {
      outline: none
    }
    
    .slider::-webkit-slider-thumb {
      border: 1px solid #fff9;
      -webkit-appearance: none;
      appearance: none;
      width: 12px;
      border-left: none;
      border-right: none;
      height: 12px;
      background: #003;
      cursor: pointer;
    }


    html, body {
      margin: 0px;
    }
    * {
      color: white;
      font-weight: normal;
      box-sizing: border-box;
    }
    .container {
      padding: 20px;
      color: white;
      height: 100%;
      width: 100%;
      font-family: monospace;
      background: #8ab;
    }
    .flexer {
      display: flex;
      flex-wrap: wrap;
    }

    .screen {
      border-radius: 2px;
      padding: 5px 10px;
      position: relative;
      margin: 20px;
      width: 180px;
      height: 330px;
      background: radial-gradient(#c88, #003);
      transform-origin: top left;
      color: black;
      box-shadow: 8px 8px 5px rgba(0,0,0,0.5);
    }
    .flex-layer {
      padding: 10px 10px;
      display: flex;
      flex-direction: column;
      top: 0px;
      left: 0px;
      pointer-events: none;
      height: 100%;
      width: 100%;
      position: absolute;
      justify-content: flex-end;
    }
    .test {
      width: 100px;
      height: 100px;
      background: red;
    }
    .drag {
      position: absolute;
    }
    .start-stop {

    }
    .flex-layer {
      padding: 10px 10px;
      display: flex;
      flex-direction: column;
      top: 0px;
      left: 0px;
      pointer-events: none;
      height: 100%;
      width: 100%;
      position: absolute;
      justify-content: flex-end;
    }
    .flex-layer * {
      pointer-events: initial;
    }
    .flex-layer.kb-droid {
      padding-bottom: 130px;
    }
    .rows {
      display: flex;
      align-items: center;
    }
    .rows * {
      width: 100%;
      text-align: center;
    }
    .rows.wide *:last-child {
      text-align: right;
    }
    .rows.wide *:first-child {
      text-align: left;
    }
    .kb-droid {
      position: absolute;
      bottom: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      pointer-events: none;
      background: url(img/kb-droid.png);
      background-size: contain;
      background-repeat: no-repeat;
      background-position: bottom right;
      z-index: 0;
    }

    .center { text-align: center; }
    br { line-height: 4px; }
    h5, h4,h3,h2,h1 { margin: 4px;}
    p { font-size: 9px; margin: 3px;}
    .s {font-size: 7px; }
    br.dx { line-height: 2em; }
body
  .container
    
    .flexer
      .screen.main
        h3.center Main
        p.center A2.M3.W3 : S2.1.B2
        br
        p Poms Done Today: 8
        p Saturation: 10:00 
        p Blocks: 20: 25 30 35
        br
        h5 Active Topics
        p Code
        p Metier
        p Demi
        p Journal Writing
        p Sprint Planning
        br
        h5 Active Book
        p Pro TypeScript
        p Effective TypeScript
        p On Anarchism
        p SitAnth
        .flex-layer
          .rows
            h3 History
            h3 Config
      .screen.start.book
        h3.center Start from Book
        p.center SitAnth
        br
        p Started On: 11/4/2020
        p Progress: 17% (100/250)
        p Avg Rate: 2% per pom
        p Poms Left: 10/50
        p End: 11/27/2020-12/8/2020
        p Accuracy: Missing Records
        br
        h4 Summaries
        p.s 1-4% lettrist psychogeography, guide to detournment
        p.s 4-6% future of detournement, Alba conf, Jorn's great intro
        p.s 6-16% on exclusion, 4th conference, insurrection
        p.s 16-17%, Vaneigem polemics on everyday life, delivered on tape
        .flex-layer
          .rows 
            h2 1 2 3 4
          .rows
            h2 Start
      .screen.start.topic
        h3.center Start from Topic
        p.center Metier
        br
        p First Done: 11/4/2020
        p Average Per Week: 4
        p Average Per Arc: 20
        p Poms Left on Quota: 4/10
        br
        h4 Summaries
        p.s short journal entry, start making design protos in pug
        p.s goofily make a draggable element (2)
        p.s do "passive loop" from design diagram in basic list
        p.s keep attending design; add other views, flex elements
        p.s fill in start from book, set weights, running books 
        .flex-layer
          .rows 
            h2 1 2 3 4
          .rows
            h2 Start
      .screen.set-weights
        h3.center Set Weights
        h4 Books
        p Pro TypeScript
        input.slider(type="range" min="0" max="4")
        p Effective TypeScript
        input.slider(type="range" min="0" max="4")
        p On Anarchism
        input.slider(type="range" min="0" max="4")
        h4 Topics
        p Code
        input.slider(type="range" min="0" max="4")
        p Metier
        input.slider(type="range" min="0" max="4")
        p Journal Writing
        input.slider(type="range" min="0" max="4")
        p Sprint Planning
        input.slider(type="range" min="0" max="4")
      mixin timer-progress
        .flex-layer
          h1.center 23:43:12
          h2.center - 4 + 
          br.dx
          .rows
            h3 Break
            h3 &nbspPause
            h3 &nbspEnd
      .screen.running.book
        h3.center Running Book
        p.center SitAnth
        p Poms: 4
        p Start Time: 13:25
        p End: 15:30-15:50
        p Reading Range: 18%-20%
        p Poms Left: 10
        p Pauses: 2
        p Pause Time: 5:20
        +timer-progress
      .screen.running.topic
        h3.center Running Topic
        p.center Journal Writing
        p Poms: 4
        p Start Time: 13:25
        p End: 15:30-15:50
        p Reading Range: 18%-20%
        p Poms Left: 10
        p Pauses: 2
        p Pause Time: 5:20
        +timer-progress
      mixin setting(label)
        .rows.wide 
          p= label
          p On/Off
      mixin notifications
        +setting('Hourly Chime')
        +setting('Block Chime')
        +setting('Saturation')
      .screen.configuration
        h3.center Configuration
        br
        h4 Notifications
        h5 Desktop
          +notifications
        h5 Mobile
          +notifications
        h5 Browser 
          +notifications
        h4 Misc
          +setting('Allow Pauses')
      .screen.history
        h3.center History
        p.center A2.M3.W3 : S2.1.B2
        h4 Arc
        h4 Month
        h4 Week
        h4 Day
        .flex-layer
          .rows
            h1 <
            h1 >
      .screen.complete.book
        h3.center Book Complete
        p.center SitAnth
        p Poms: 4
        p Elapsed: 110 minutes
        p Pauses: 3
        p Pause Time: 15:20

        br
        br.dx
        .flex-layer.kb-droid
          .rows
            h2 18%
            h1 19%
            h2 20%
          br
          input.done(type="text" minlength="0" maxlength="50" spellcheck="false" placeholder="scopes, abstract classes, generics, constraints 5/7")
          .kb-droid
      .screen.complete.topic
        h3.center Topic Complete
        

  script.
    const $ = document.querySelector.bind(document);
    const $$ = document.querySelectorAll.bind(document);

    const d = {
      dragging: false,
      offsetX: null,
      offsetY: null,
    };

    document.addEventListener('mousedown', ({ target: dragging, offsetX, offsetY }) => {
      if (dragging.classList.contains('drag')) {
        Object.assign(d, { dragging, offsetX, offsetY });
        console.log('YES')
      }
    });

    document.addEventListener('mouseup', (e) => {
      d.dragging = false;
      d.offsetX = d.offsetY = null;
    });

    document.addEventListener('mousemove', (e) => {
      if (!d.dragging) return;
      const { clientX, clientY } = e;
      const {
        top, left, bottom, right,
      } = d.dragging.parentNode.getBoundingClientRect();
      const x = clientX - left - d.offsetX;
      const y = clientY - top - d.offsetY;

      const sameX =  x === parseInt(d.dragging.style.left);
      const sameY =  y === parseInt(d.dragging.style.top);
      if (sameX && sameY) return;
      
      Object.assign(d.dragging.style, {
        left: x,
        top: y,
      });

    });

